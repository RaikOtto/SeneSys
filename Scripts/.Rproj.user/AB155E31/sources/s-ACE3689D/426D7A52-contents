library("DESeq2")
library("stringr")
library("limma")
library("edgeR")

# HOXB1
# ## normalization

draw_colnames_45 <- function (coln, gaps, ...) {
  coord = pheatmap:::find_coordinates(length(coln), gaps)
  x = coord$coord - 0.5 * coord$size
  res = textGrob(coln, x = x, y = unit(1, "npc") - unit(3,"bigpts"), vjust = 0.5, hjust = 1, rot = 45, gp = gpar(...))
  return(res)}
assignInNamespace(x="draw_colnames", value="draw_colnames_45",ns=asNamespace("pheatmap"))

meta_info = read.table("~/MAPTor_NET/Misc/Meta_information.tsv",sep = "\t",header = T,stringsAsFactors = F)
rownames(meta_info) = meta_info$Name

# load_data

#expr_raw_2 = read.table("~/MAPTor_NET/BAMs/TPMs.81_Samples_13_11_2017.Groetzinger_Scarpa.tsv",header = T, stringsAsFactors = F,row.names = 1)
expr_raw_2 = read.table("~/SeneSys/Data/Data_9461.Counts.tsv",header = T, stringsAsFactors = F,row.names = 1)
colnames(expr_raw_2) = str_replace(colnames(expr_raw_2), pattern = "^X\\.", "")
colnames(expr_raw_2) = str_replace(colnames(expr_raw_2), pattern = "^X", "")
expr_raw_2[1:5,1:5]
dim(expr_raw_2)
#expr_raw_save = expr_raw
#expr_raw = expr_raw_save
meta_data = meta_info[ colnames(expr_raw_2) , ]
#expr_raw_2 = expr_raw_2[,colnames(expr_raw_2) %in% meta_data$Name[meta_data$Included== "Yes"] ]
dim(expr_raw_2)

design <- model.matrix(~0 + as.factor(meta_data$ABC_GCB))
#colnames(design) = c("Wiedenmann","Scarpa")
#colnames(design) = c("NEC","NET")

DGE = edgeR::DGEList(expr_raw_2)
DGE = edgeR::calcNormFactors(DGE,method =c("TMM"))
v = limma::voom(DGE,design)
expr_raw = v$E

### TMM normalization
contr.matrix = makeContrasts( contrast = NEC - NET,  levels = as.factor(meta_data$NEC_NET) )
v = voom(expr_raw,design)
expr_raw = v$E

vfit <- lmFit(bam_n, design)
vfit <- contrasts.fit(vfit, contrasts=contr.matrix)
efit <- eBayes(vfit)
plotSA(efit)

### 

summary(decideTests(efit))

tfit <- treat(vfit, lfc=1)
dt <- decideTests(tfit, lfc = 1, p.value = 0.05)
summary(dt)

volc_all = topTable( fit, coef = "contrast", number  = nrow(eDatSet), adjust  ="none", p.value = 1, lfc = 0)

plotMD(efit, column=1, status=dt[,1], main=colnames(tfit)[1],xlim=c(-1,13))

#write.table(expr_raw, "~/MAPTor_NET/BAMs/Final_plot.TPMs.57.Wiedenmann_Scarpa.tsv",sep ="\t", quote = F)

### DESeq2 normalization

dds_raw = DESeq2::DESeqDataSetFromMatrix(
  countData = round(expr_raw_2,0),
  colData = meta_data,
  design = ~ as.factor(Study),
  tidy = F
)
dds_raw = estimateSizeFactors(dds_raw)
expr_raw = assay( DESeq2::varianceStabilizingTransformation(dds_raw) )

p_genes = c("ABI1","ACHE","ACVRL1","ADAMTS1","ADAMTS8","ADGRB1","ADRA1A","ADRA1B","ADRA1D","ADRA2A","AGGF1","AIF1","AIMP1","ALOX12","ALOX15B","ANG","APC","APPL1","APPL2","AREG","ARHGEF1","ARHGEF2","ARTN","ATP5IF1","ATP8A2","B4GALT7","BAP1","BCAR1","BCAT1","BIN1","BLZF1","BMI1","BMP10","BMPR2","BNC1","BNIPL","BRCA1","BRCA2","BST2","BTC","BTG1","BTG2","BTG3","BTG4","BUB1","BUB1B","BUB3","CADM1","CALCA","CAPN1","CAPNS1","CBFA2T2","CBFA2T3","CCDC88A","CCKBR","CCL14","CCL23","CCL3L3","CCN1","CD160","CD164","CD24","CD274","CD276","CD28","CD33","CD3E","CD40LG","CD47","CD70","CD74","CD79A","CD81","CD86","CDC123","CDC14A","CDC16","CDC25A","CDC25B","CDC25C","CDC27","CDC6","CDC7","CDCA7","CDH13","CDK10","CDK11B","CDK13","CDK2","CDK3","CDK4","CDK5","CDK5R1","CDK6","CDK7","CDK9","CDKN1A","CDKN1C","CDKN2A","CDKN2B","CDKN2C","CDKN2D","CDKN3","CEP43","CGREF1","CGRRF1","CHEK1","CHRM1","CHRM3","CHRM4","CHRM5","CHRNA10","CHRNA7","CIAO1","CKLF","CKS1B","CKS2","CLEC11A","CLK1","CNOT8","COL18A1","COL4A3","CREG1","CRIP1","CRTAM","CSE1L","CSF1","CSF1R","CSF3","CTBP1","CTBP2","CTF1","CTNNBIP1","CUL1","CUL2","CUL3","CUL4A","CUL5","CXCL1","CXCL10","CXCL5","CXCL8","CXCR2","DAB2","DCTN2","DDX11","DELEC1","DERL2","DHPS","DKC1","DLEC1","DLG1","DLG5","DNAJA2","DNPH1","DTYMK","DUSP22","E2F1","E4F1","EBI3","EDN1","EEF1E1","EGFR","EGR4","EHF","EID2","EIF2AK2","EIF5A","EIF5A2","ELANE","ELF4","ELF5","ELN","EMP1","EMP2","EMP3","ENPEP","ENPP7","EPGN","EPHB4","EPS15","EPS8","ERBB2","ERBB4","EREG","ERF","ERG","ETS1","EVI5","FABP3","FABP6","FABP7","FES","FGF10","FGF18","FGF4","FGF5","FGF6","FGF7","FGFBP1","FLT1","FLT3","FLT3LG","FLT4","FOSL1","FOXO4","FOXP3","FRK","FSCN1","FTH1","FZD3","GAB1","GAS6","GAS8","GCG","GFI1B","GHRL","GLI1","GLI2","GLMN","GLP2R","GML","GNL3","GNRH1","GPC4","GPNMB","GPX1","GTPBP4","HCLS1","HDGF","HELLS","HGS","HOXC10","HTR1A","ICOSLG","IFITM1","IFNL1","IFRD2","IGF1","IGF1R","IGFBP4","IGFBP6","IGFBP7","IL11","IL12B","IL12RB1","IL12RB2","IL15","IL15RA","IL18","IL1A","IL1B","IL2","IL21","IL27","IL2RA","IL3","IL31RA","IL4","IL5RA","IL6","IL6R","IL7","IL9","IL9R","ING1","ING4","ING5","INHA","INSIG1","INSL4","IRF2","ISG20","JAG2","KAT2B","KHDRBS1","KIF15","KIF2C","KITLG","KLF10","KLF11","KLF4","KLK8","KRT16","KRT2","KRT4","LAMA1","LAMB1","LAMC1","LAMP3","LDOC1","LGI1","LIF","LMO1","LRP1","LRP5","LRPAP1","LST1","LY86","LYN","MAGED1","MAP3K11","MAPRE1","MAPRE2","MARK4","MAS1","MATK","MCTS1","MDM2","MDM4","MFN2","MIA","MIF","MKI67","MNAT1","MNT","MPL","MS4A2","MST1R","MT3","MTCP1","MXD1","MXD4","MXI1","MYC","MYO16","NAA35","NAB2","NAMPT","NANOG","NAP1L1","NASP","NCK1","NCK2","NDN","NDP","NDUFS4","NF1","NF2","NME1","NME2","NOP2","NOTCH2","NOX4","NPM1","NPY","NR6A1","NRDC","NRP1","NUDC","NUP62","OPRM1","OSM","OSMR","PA2G4","PAWR","PCNA","PDAP1","PDF","PDGFA","PDGFRA","PDS5B","PDZK1","PEMT","PGF","PIM1","PIM2","PLAAT4","PLG","PLK1","POLA1","POU1F1","POU3F2","PPARD","PPM1D","PRDM4","PRDX1","PRG4","PRKD1","PRKRA","PRL","PRMT5","PROK2","PRTN3","PSPHP1","PTCH1","PTEN","PTHLH","PTK2B","PTN","PTPRC","PYY","QSOX1","RACGAP1","RAF1","RAPGEF3","RARRES1","RASGRP4","RBBP4","RBBP7","RBFOX2","REG1A","REG1B","REG3A","RERG","RHOG","RPS27","RPS4X","RUNX3","S100A11","S100B","S1PR2","S1PR3","SCG2","SCIN","SERPINF1","SERTAD1","SESN1","SFN","SFTPD","SIPA1","SIRPG","SKP2","SLAMF1","SLC29A2","SPDYA","SPEG","SPHK1","SPOCK1","SRA1","SSR1","SST","SSTR1","SSTR2","SSTR3","SSTR4","SSTR5","STAMBP","STIL","SYK","TACSTD2","TAL1","TBC1D8","TBRG1","TBRG4","TBX2","TBX3","TBX5","TCF19","TCFL5","TCIRG1","TDGF1","TENM1","TFDP1","TGFA","TGFB1I1","TGFB2","TGFBI","TGFBR1","TGFBR2","THAP12","THPO","TIMELESS","TIMP1","TIPIN","TM4SF4","TNFRSF11A","TNFRSF17","TNFRSF8","TNFRSF9","TNFSF12","TNFSF13","TNFSF13B","TNFSF15","TNFSF4","TNFSF8","TNFSF9","TOB1","TOB2","TP53","TP53I11","TPX2","TRAIP","TRIB1","TRIM27","TSC1","TSHR","TSPAN31","TSPO","TSPY1","TTK","TUSC2","TXN","UBE2V2","UBR5","UHRF1","UHRF2","UMOD","USP8","UTP20","VEGFA","VEGFB","VEGFD","VHL","VIP","VIPR1","VTI1B","WARS1","ZEB1","ZFP36L2","ZMYND11","ZPR1")

######

dds_expr_raw = DESeq2::DESeqDataSetFromMatrix(
  countData = round(expr_raw,0),
  colData = meta_data,
  design = ~ as.factor(ABC_GCB),
  tidy = F
)
dds_expr_raw = estimateSizeFactors(dds_expr_raw)
vsd <- vst(dds_expr_raw, blind = FALSE)
expr_raw = assay( DESeq2::varianceStabilizingTransformation(dds_expr_raw) )
#expr_raw = assay(vsd)
expr_raw[1:5,1:5]
